dnl $Id$
dnl Copyright(2000): Albert van der Horst, HCC FIG Holland by GNU Public License
divert(-1)dnl

                        CONFIGURATION FILE
                  FOR REGULAR LINUX VERSION
                       FOR NASM AND GNU as

include(prelude.m4)
define( {_BITS32_}, _no)dnl
define( {_BITS64_}, _yes)dnl
define( {_LINUX_N_}, _yes )
define( {_THREADS_}, _yes )
dnl Do not increase to or above 0x80000000
dnl GNU-linux ungracefully mishandles this
dnl Problems have been observed for moderate large values
dnl too. Experience suggests a relation with the
dnl size of the swap space.
dnl 2 Mbyte   Lowest for -i option.
define({M4_EM}, 0x00200000)
dnl ugly value for test
dnl define({M4_EM}, 0x00176500)
dnl 8 Gbyte , doesn't work for fasm
dnl define({M4_EM},(0x200000000))
dnl slightly under 2 Gbyte, doesn't work for fasm
dnl define({M4_EM},(0x07F000000))
define( {_TASK_}, _yes)dnl
define( {_ALIGNED_}, _yes)
dnl define( {_ISO_IN_}, _yes)dnl
dnl define( {_SECURITY_}, _no)dnl
dnl define( {_LOAD_}, _no)dnl
dnl define( {_SOURCEFIELD_}, _no)dnl
define( {_EXTRAFIELD_}, _yes)dnl
include(postlude.m4)dnl
dnl
dnl This only makes sense after the postlude
dnl define({_NEXT},{JMP NEXT})
dnl By e.g. _BITS32_({DC LIT, X},{dnl}) can extra blank lines
